# name: actions
# on: push

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     name: Test Enviroment Deploy
#     env:
#       MIX_ENV: test
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#     services:
#       postgres:
#         image: postgres:12
#         ports:
#           - 5432:5432
#         env:
#           POSTGRES_USER: postgres
#           POSTGRES_PASSWORD: postgres
#         options: >-
#           --health-cmd pg_isready
#           --health-interval 10s
#           --health-timeout 5s
#           --health-retries 5
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/setup-elixir@v1
#         with:
#           experimental-otp: true
#           otp-version: 24.0.2
#           elixir-version: 1.12.2
#       - uses: actions/cache@v1
#         with:
#           path: deps
#           key: ${{ runner.os }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
#           restore-keys: |
#             ${{ runner.os }}-mix-
#       - uses: actions/cache@v1
#         with:
#           path: _build
#           key: ${{ runner.os }}-build-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
#           restore-keys: |
#             ${{ runner.os }}-build-
      # - run: mix deps.get
      # - run: mix compile 
      # - run: mix test
      # - run: mix format 
      # - run: mix credo 
      # - run: mix coveralls.github

  # deploy:
  #   needs: test # Will only run if the test job succeeds
  #   if: github.ref == 'refs/heads/master' # Only run this job if it is on the master branch

  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ref: master # Checkout out master instead of the latest commit
  #         fetch-depth: 0 # Checkout the whole branch

  #     - uses: mhanberg/gigalixir-action@v0.3.0
  #       with:
  #         GIGALIXIR_USERNAME: ${{ secrets.GIGALIXIR_USERNAME }}
  #         GIGALIXIR_PASSWORD: ${{ secrets.GIGALIXIR_PASSWORD }}
  #         GIGALIXIR_APP: bankapi 
  #         SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  #         MIGRATIONS: false # defaults to true
